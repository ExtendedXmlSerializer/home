environment:
  BUILD_SOLUTION_PATH: '.\ExtendedXmlSerializer.sln'
  BUILD_DOCUMENTATION_PATH: '.\documentation\docfx.json'
  API_GITHUB_TOKEN:
    secure: 7Mh4p4+VYekMQqR4uHRCpQ0krPMt11dotQP04KDg0h1LqISlqUVwCVd7yKPT1wgZ
  API_APPVEYOR_TOKEN:
    secure: xQR4THytwto+UTuQtpj5N5RcD4pDHIJVnahrbQ7Xqjs=
  DEPLOY_KEY:
    secure: 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
  DEPLOY_USER: ExtendedXmlSerializer Automation via AppVeyor
  DEPLOY_EMAIL: ExtendedXmlSerializer@users.noreply.github.com

image: Visual Studio 2022

skip_tags: true
skip_non_tags: true
skip_commits:
  author: /Automation Agent/

only_commits:
  files:
    - '*.sln'
    - '.build\**\*'
    - src\**\*
    - test\**\*
    - documentation\**\*

configuration: Debug

dotnet_csproj:
  patch: true
  file: src\*\*.csproj
  version_prefix: '{version}'

nuget:
  project_feed: false
  disable_publish_on_pr: true

pull_requests:
  do_not_increment_build_number: true

for:
- # Development
  skip_non_tags: false
  branches:
    only:
      - master

  install:
    - ps: . .\.build\Install.ps1

  build_script:
  - ps: |
        Exec { & dotnet build $env:BUILD_SOLUTION_PATH -c Release }
        Exec { & dotnet pack $env:BUILD_SOLUTION_PATH -c Release }

  notifications:
    - provider: GitHubPullRequest
      template: |
        {{#passed}}:white_check_mark:{{/passed}}{{#failed}}:x:{{/failed}} [Build {{&projectName}} {{buildVersion}} {{status}}]({{buildUrl}}) (commit {{commitUrl}} by @{{&commitAuthorUsername}})

        {{#passed}}
        Install it by running the following command in [Package Manager Console](https://docs.microsoft.com/en-us/nuget/consume-packages/install-use-packages-powershell):

        ```
        Install-Package ExtendedXmlSerializer -Version {{buildVersion}} -Source https://ci.appveyor.com/nuget/extendedxmlserializer-preview
        ```

        Problems with the above command?  You may be running into this known issue here:
        https://github.com/NuGet/Home/issues/7189
        {{/passed}}
      on_build_success: true

  after_test:
    - ps: Exec { & dotnet test $env:BUILD_SOLUTION_PATH -c Release -f netcoreapp3.1 }

  nuget:
    project_feed: true
    disable_publish_on_pr: false

  artifacts:
    - path: src\**\*.nupkg
      name: 'Preview Package $(APPVEYOR_BUILD_VERSION)'

- # Debug
  skip_non_tags: false
  branches:
    only:
      - /debug\/\w*/

  cache:
    - '%USERPROFILE%\.ssh\known_hosts'

  install:
    - ps: . .\.build\Install.ps1
    - ps: .\.build\Prepare-Deployment.ps1

  build_script:
    - ps: Exec { & dotnet pack $env:BUILD_SOLUTION_PATH -c Release }
    - ps: Exec { & docfx $env:BUILD_DOCUMENTATION_PATH }

  test: off

  on_success:
    - ps: .\.build\Deploy-Documentation.ps1


- # Deploy
  branches:
    only:
      - /\d*\.\d*\.\d*/

  init:
    - ps: |
          if (!$env:APPVEYOR_FORCED_BUILD)
          {
            throw "This configuration should only be called from external workflows."
          }

  cache:
    - '%USERPROFILE%\.ssh\known_hosts'

  install:
    - ps: . .\.build\Install.ps1
    - ps: .\.build\Prepare-Deployment.ps1

  build_script:
    - ps: Exec { & dotnet pack $env:BUILD_SOLUTION_PATH -c Release }
    - ps: Exec { & docfx $env:BUILD_DOCUMENTATION_PATH }

  test: off

  before_deploy:
    - ps: .\.build\Store-CurrentRelease.ps1

  artifacts:
    - path: src\**\*.nupkg
      name: '$(APPVEYOR_PROJECT_NAME) $(APPVEYOR_BUILD_VERSION)'

  deploy:
    - provider: GitHub
      tag: $(APPVEYOR_REPO_TAG_NAME)
      release: $(DEPLOY_RELEASE_NAME)
      description: $(DEPLOY_RELEASE_DESCRIPTION)
      artifact: /.*\.nupkg/
      draft: false
      prerelease: $(DEPLOY_RELEASE_IS_PRERELEASE)
      auth_token: $(API_GITHUB_TOKEN)
      force_update: true
    - provider: NuGet
      name: production
      api_key:
        secure: aLRTBBLmLj8KeKfmmRz6dToGICG9f96goueVi/osE4B3Oz5ZXP3w8TBfqOi9tp/c
  on_success:
    - ps: .\.build\Deploy-Documentation.ps1
